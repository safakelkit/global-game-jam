[gd_scene load_steps=5 format=3 uid="uid://b46qpkywt2csc"]

[sub_resource type="GDScript" id="GDScript_rocvm"]
script/source = "extends Node3D

# Movement properties
@export var speed = 30
const KILL_TIME = 2
var timer = 0

# Damage properties
var damage_amount: int = 10

func _ready():
	# Connect the body_entered signal to detect collisions
	if $Area3D:
		$Area3D.body_entered.connect(_on_body_entered)

func _physics_process(delta):
	# Move the bubble forward
	var forward_direction = global_transform.basis.z.normalized()
	global_translate(forward_direction * speed * delta)

	# Destroy the bubble after KILL_TIME seconds
	timer += delta
	if timer >= KILL_TIME:
		queue_free()

func _on_body_entered(body: Node):
	# Check if the colliding body is an enemy
	if body.is_in_group(\"enemies\"):
		# Apply damage to the enemy
		if body.has_method(\"take_damage\"):
			body.take_damage(damage_amount)
		
		# Destroy the bubble after hitting the enemy
		queue_free()
"

[sub_resource type="SphereMesh" id="SphereMesh_1fbjn"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_v5fqc"]
albedo_color = Color(1, 1, 0.333333, 1)

[sub_resource type="SphereShape3D" id="SphereShape3D_404o2"]

[node name="Bullet3" type="Node3D"]
script = SubResource("GDScript_rocvm")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(0.001, 0, 0, 0, 0.001, 0, 0, 0, 0.001, 0, 0, 0)
mesh = SubResource("SphereMesh_1fbjn")
surface_material_override/0 = SubResource("StandardMaterial3D_v5fqc")

[node name="Area3D" type="Area3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(0.001, 0, 0, 0, 0.001, 0, 0, 0, 0.001, 0, 0, 0)
shape = SubResource("SphereShape3D_404o2")
